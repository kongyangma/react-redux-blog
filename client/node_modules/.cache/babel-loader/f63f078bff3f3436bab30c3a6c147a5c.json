{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kongyangma/Desktop/react-redux-blog/client/src/components/blog/post_detail/comment_new.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { createComment } from '../../../actions';\n\nclass CommentNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderTextEditor = field => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        id: \"x\",\n        type: \"hidden\",\n        name: \"content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"trix-editor\", {\n        input: \"x\",\n        ...field.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this);\n  }\n\n  handleFormSubmit({\n    comment\n  }) {\n    const postId = this.props.postId;\n    this.props.createComment({\n      comment,\n      postId\n    }, () => {\n      // callback 1: clear text editor\n      document.querySelector(\"trix-editor\").value = \"\";\n    }, (path, state) => {\n      // callback 2: history replace\n      this.props.history.replace(path, state);\n    });\n  }\n\n  renderAlert() {\n    const {\n      state\n    } = this.props;\n    const {\n      action\n    } = this.props;\n\n    if (state && action === 'REPLACE') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: [`[${state.time}] --- `, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Oops!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 36\n        }, this), \" \", state.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mt-5 mb-4\",\n        children: \"New Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), this.renderAlert(), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(this.handleFormSubmit.bind(this)),\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"comment\",\n          component: this.renderTextEditor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          action: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Post Your Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCommentNew = reduxForm({\n  form: 'comment_new' // name of the form\n\n})(CommentNew);\nexport default connect(null, {\n  createComment\n})(CommentNew);","map":{"version":3,"sources":["/Users/kongyangma/Desktop/react-redux-blog/client/src/components/blog/post_detail/comment_new.js"],"names":["React","Component","connect","reduxForm","Field","createComment","CommentNew","renderTextEditor","field","input","handleFormSubmit","comment","postId","props","document","querySelector","value","path","state","history","replace","renderAlert","action","time","message","render","handleSubmit","bind","form"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAWjCM,gBAXiC,GAWbC,KAAD,iBACjB;AAAU,MAAA,SAAS,EAAC,YAApB;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,cAAjB;AAAgC,QAAA,EAAE,EAAC,GAAnC;AAAuC,QAAA,IAAI,EAAC,QAA5C;AAAqD,QAAA,IAAI,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAa,QAAA,KAAK,EAAC,GAAnB;AAAA,WAA2BA,KAAK,CAACC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZ+B;AAAA;;AAEjCC,EAAAA,gBAAgB,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAc;AAC5B,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWD,MAA1B;AACA,SAAKC,KAAL,CAAWR,aAAX,CAAyB;AAAEM,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAzB,EAA8C,MAAM;AAAG;AACrDE,MAAAA,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,KAAtC,GAA8C,EAA9C;AACD,KAFD,EAEG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAG;AACnB,WAAKL,KAAL,CAAWM,OAAX,CAAmBC,OAAnB,CAA2BH,IAA3B,EAAiCC,KAAjC;AACH,KAJD;AAKD;;AASDG,EAAAA,WAAW,GAAG;AAEZ,UAAM;AAAEH,MAAAA;AAAF,QAAY,KAAKL,KAAvB;AACA,UAAM;AAAES,MAAAA;AAAF,QAAa,KAAKT,KAAxB;;AAEA,QAAIK,KAAK,IAAII,MAAM,KAAK,SAAxB,EAAmC;AACjC,0BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,IAAI,EAAC,OAAzC;AAAA,mBACI,IAAGJ,KAAK,CAACK,IAAK,QADlB,oBAC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD3B,OACmDL,KAAK,CAACM,OADzD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKb,KAA9B;AAEA,wBACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKQ,WAAL,EAFH,eAGE;AAAM,QAAA,QAAQ,EAAEK,YAAY,CAAC,KAAKhB,gBAAL,CAAsBiB,IAAtB,CAA2B,IAA3B,CAAD,CAA5B;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,SAAS,EAAE,KAAKpB;AAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,MAAM,EAAC,QAAf;AAAwB,UAAA,SAAS,EAAC,iBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA9CgC;;AAiDnCD,UAAU,GAAGH,SAAS,CAAC;AACrByB,EAAAA,IAAI,EAAE,aADe,CACC;;AADD,CAAD,CAAT,CAEVtB,UAFU,CAAb;AAIA,eAAeJ,OAAO,CAAC,IAAD,EAAO;AAAEG,EAAAA;AAAF,CAAP,CAAP,CAAiCC,UAAjC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { createComment } from '../../../actions';\n\nclass CommentNew extends Component {\n\n  handleFormSubmit({ comment }) {\n    const postId = this.props.postId;\n    this.props.createComment({ comment, postId }, () => {  // callback 1: clear text editor\n      document.querySelector(\"trix-editor\").value = \"\"\n    }, (path, state) => {  // callback 2: history replace\n        this.props.history.replace(path, state);\n    });\n  }\n\n  renderTextEditor = (field) => (\n    <fieldset className=\"form-group\">\n      <input className=\"form-control\" id=\"x\" type=\"hidden\" name=\"content\" />\n      <trix-editor input=\"x\" {...field.input} />\n    </fieldset>\n  );\n\n  renderAlert() {\n\n    const { state } = this.props;\n    const { action } = this.props;\n\n    if (state && action === 'REPLACE') {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {`[${state.time}] --- `} <strong>Oops!</strong> {state.message}\n        </div>\n      );\n    }\n  }\n\n  render() {\n\n    const { handleSubmit } = this.props;\n\n    return (\n      <div>\n        <h3 className=\"mt-5 mb-4\">New Comment</h3>\n        {this.renderAlert()}\n        <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n          <Field name=\"comment\" component={this.renderTextEditor} />\n          <button action=\"submit\" className=\"btn btn-primary\">Post Your Comment</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nCommentNew = reduxForm({\n  form: 'comment_new',  // name of the form\n})(CommentNew);\n\nexport default connect(null, { createComment })(CommentNew);\n\n\n"]},"metadata":{},"sourceType":"module"}