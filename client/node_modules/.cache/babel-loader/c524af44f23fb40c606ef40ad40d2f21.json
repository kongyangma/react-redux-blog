{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kongyangma/Workspace/react-redux-blog/client/src/components/userinfo/profile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { fetchProfile, clearProfile, updateProfile } from '../../actions/index';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass Profile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = field => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        ...field.input,\n        type: field.type,\n        required: field.required ? 'required' : '',\n        disabled: field.disabled ? 'disabled' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this);\n\n    this.renderOptions = field => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        ...field.input,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"male\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"female\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this);\n\n    this.renderTextarea = field => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        ...field.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this);\n  }\n\n  componentDidMount() {\n    if (!this.props.initialValues) {\n      this.props.fetchProfile(); // fetch profile\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearProfile(); // clear the redux state (userinfo) when this component will unmount\n  }\n\n  handleFormSubmit({\n    firstName,\n    lastName,\n    birthday,\n    sex,\n    phone,\n    address,\n    occupation,\n    description\n  }) {\n    this.props.updateProfile({\n      firstName,\n      lastName,\n      birthday,\n      sex,\n      phone,\n      address,\n      occupation,\n      description\n    }, (path, state) => {\n      // callback: history replace\n      this.props.history.replace(path, state);\n    });\n  }\n\n  renderAlert() {\n    const {\n      state\n    } = this.props.history.location;\n    const {\n      action\n    } = this.props.history;\n\n    if (state && action === 'REPLACE') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert ${state.status === 'success' ? 'alert-success' : 'alert-danger'}`,\n        role: \"alert\",\n        children: [`[${state.time}] --- `, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: state.status === 'success' ? 'Congratulations!' : 'Oops!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 36\n        }, this), \" \", state.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    if (!this.props.initialValues) {\n      // if the initialValues is null, render <div>Loading...</div>\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }, this);\n    }\n\n    const {\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.renderAlert(), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-profile\",\n        onSubmit: handleSubmit(this.handleFormSubmit.bind(this)),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          component: this.renderInput,\n          type: \"email\",\n          label: \"Email:\",\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"firstName\",\n          component: this.renderInput,\n          type: \"text\",\n          label: \"First Name:\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"lastName\",\n          component: this.renderInput,\n          type: \"text\",\n          label: \"Last Name:\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"birthday\",\n          component: this.renderInput,\n          type: \"date\",\n          label: \"Birthday:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"sex\",\n          component: this.renderOptions,\n          label: \"Sex:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"phone\",\n          component: this.renderInput,\n          type: \"text\",\n          label: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"address\",\n          component: this.renderInput,\n          type: \"text\",\n          label: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"occupation\",\n          component: this.renderInput,\n          type: \"text\",\n          label: \"Occupation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"description\",\n          component: this.renderTextarea,\n          label: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          action: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nProfile = reduxForm({\n  form: 'profile' // name of the form\n  // validate: validate,\n\n})(Profile);\n\nfunction mapStateToProps(state) {\n  return {\n    initialValues: state.profile.user // set initial values for the form\n\n  };\n}\n\nexport default connect(mapStateToProps, {\n  fetchProfile,\n  clearProfile,\n  updateProfile\n})(Profile);\n/*\n<Container className=\"mt-5 pt-5\">\n        <Row className=\"justify-content-lg-center\">\n          <Form>\n            <h3>Profile</h3>\n            <hr />\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>First Name</Form.Label>\n              <Form.Control type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Gender</Form.Label>\n              <Form.Control as=\"select\">\n                <option>Male</option>\n                <option>Female</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Phone</Form.Label>\n              <Form.Control type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Address</Form.Label>\n              <Form.Control type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Occupation</Form.Label>\n              <Form.Control type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Description</Form.Label>\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Update Profile\n              </Button>\n          </Form>\n        </Row>\n      </Container>\n*/","map":{"version":3,"sources":["/Users/kongyangma/Workspace/react-redux-blog/client/src/components/userinfo/profile.js"],"names":["React","Component","connect","reduxForm","Field","fetchProfile","clearProfile","updateProfile","Container","Row","Form","Button","Profile","renderInput","field","label","input","type","required","disabled","renderOptions","renderTextarea","componentDidMount","props","initialValues","componentWillUnmount","handleFormSubmit","firstName","lastName","birthday","sex","phone","address","occupation","description","path","state","history","replace","renderAlert","location","action","status","time","message","render","handleSubmit","bind","form","mapStateToProps","profile","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { fetchProfile, clearProfile, updateProfile } from '../../actions/index';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass Profile extends Component {\n\n  componentDidMount() {\n    if (!this.props.initialValues) {\n      this.props.fetchProfile();  // fetch profile\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearProfile();  // clear the redux state (userinfo) when this component will unmount\n  }\n\n  handleFormSubmit({ firstName, lastName, birthday, sex, phone, address, occupation, description }) {\n    this.props.updateProfile({ firstName, lastName, birthday, sex, phone, address, occupation, description }, (path, state) => {  // callback: history replace\n      this.props.history.replace(path, state);\n    });\n  }\n\n  renderInput = (field) => (\n    <fieldset className=\"form-group\">\n      <label>{field.label}</label>\n      <input\n        className=\"form-control\"\n        {...field.input}\n        type={field.type}\n        required={field.required? 'required' : ''}\n        disabled={field.disabled? 'disabled' : ''}\n      />\n    </fieldset>\n  );\n\n  renderOptions = (field) => (\n    <fieldset className=\"form-group\">\n      <label>{field.label}</label>\n      <select className=\"form-control\" {...field.input}>\n        <option />\n        <option value=\"male\">Male</option>\n        <option value=\"female\">Female</option>\n      </select>\n    </fieldset>\n  );\n\n  renderTextarea = (field) => (\n    <fieldset className=\"form-group\">\n      <label>{field.label}</label>\n      <textarea className=\"form-control\" {...field.input} />\n    </fieldset>\n  );\n\n  renderAlert() {\n\n    const { state } = this.props.history.location;\n    const { action } = this.props.history;\n\n    if (state && action === 'REPLACE') {\n\n      return (\n        <div className={`alert ${state.status === 'success' ? 'alert-success' : 'alert-danger'}`} role=\"alert\">\n          {`[${state.time}] --- `} <strong>{state.status === 'success' ? 'Congratulations!' : 'Oops!'}</strong> {state.message}\n        </div>\n      );\n    }\n  }\n\n  render() {\n\n    if (!this.props.initialValues) {  // if the initialValues is null, render <div>Loading...</div>\n      return <div>Loading...</div>\n    }\n\n    const { handleSubmit } = this.props;\n\n    return (\n      <div>\n        { this.renderAlert() }\n        <form className=\"form-profile\" onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n          <h3>Profile</h3>\n          <hr />\n          <Field name=\"email\" component={this.renderInput} type=\"email\" label=\"Email:\" disabled={true} />\n          <Field name=\"firstName\" component={this.renderInput} type=\"text\" label=\"First Name:\" required={true} />\n          <Field name=\"lastName\" component={this.renderInput} type=\"text\" label=\"Last Name:\" required={true} />\n          <Field name=\"birthday\" component={this.renderInput} type=\"date\" label=\"Birthday:\" />\n          <Field name=\"sex\" component={this.renderOptions} label=\"Sex:\" />\n          <Field name=\"phone\" component={this.renderInput} type=\"text\" label=\"Phone:\" />\n          <Field name=\"address\" component={this.renderInput} type=\"text\" label=\"Address:\" />\n          <Field name=\"occupation\" component={this.renderInput} type=\"text\" label=\"Occupation:\" />\n          <Field name=\"description\" component={this.renderTextarea} label=\"Description:\" />\n          <button action=\"submit\" className=\"btn btn-primary\">Update Profile</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nProfile = reduxForm({\n  form: 'profile', // name of the form\n  // validate: validate,\n})(Profile);\n\nfunction mapStateToProps(state) {\n  return {\n    initialValues: state.profile.user // set initial values for the form\n  };\n}\n\nexport default connect(mapStateToProps, { fetchProfile, clearProfile, updateProfile })(Profile);\n\n\n\n/*\n<Container className=\"mt-5 pt-5\">\n        <Row className=\"justify-content-lg-center\">\n          <Form>\n            <h3>Profile</h3>\n            <hr />\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>First Name</Form.Label>\n              <Form.Control type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Gender</Form.Label>\n              <Form.Control as=\"select\">\n                <option>Male</option>\n                <option>Female</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Phone</Form.Label>\n              <Form.Control type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Address</Form.Label>\n              <Form.Control type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Occupation</Form.Label>\n              <Form.Control type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Description</Form.Label>\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Update Profile\n              </Button>\n          </Form>\n        </Row>\n      </Container>\n*/"]},"metadata":{},"sourceType":"module"}