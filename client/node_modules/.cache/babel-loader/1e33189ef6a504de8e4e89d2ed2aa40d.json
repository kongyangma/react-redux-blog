{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kongyangma/Desktop/react-redux-blog/client/src/components/blog/post_detail/index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport NoMatch from '../../nomatch';\nimport PostBody from './post_body';\nimport Comments from './comments';\nimport CommentNew from './comment_new';\nimport PostEdit from './post_edit';\nimport { fetchPost, checkAuthority, deletePost } from '../../../actions';\n\nclass PostDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // component state: being read or being edited\n      beingEdit: false\n    };\n  }\n\n  componentDidMount() {\n    // By default, we set beingEdit as false (Since when the user first click the post, the post detail is read, rather than edited)\n    this.setState({\n      beingEdit: false\n    }); // Get post id\n\n    const {\n      id\n    } = this.props.match.params; // Fetch post detail\n\n    if (!this.props.post) {\n      this.props.fetchPost(id);\n    } // Check whether current authenticated user has authority to make change to this post\n\n\n    this.props.checkAuthority(id);\n  }\n\n  handleEditSuccess() {\n    this.setState({\n      beingEdit: false\n    });\n  }\n\n  onEditClick() {\n    this.setState({\n      beingEdit: true\n    });\n  }\n\n  onDeleteClick() {\n    const {\n      id\n    } = this.props.match.params;\n    this.props.deletePost(id, path => {\n      this.props.history.push(path);\n    });\n  }\n\n  renderDeleteConfirmModal() {\n    // used for delete confirmation\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"deleteConfirmModal\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"deleteConfirmModalLabel\",\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              id: \"deleteConfirmModalLabel\",\n              children: \"Confirm Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              \"data-dismiss\": \"modal\",\n              \"aria-label\": \"Close\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Are you sure you want to delete this post with its comments? \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Attention!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 79\n              }, this), \" This delete operation cannot be undone.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              \"data-dismiss\": \"modal\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-danger\",\n              \"data-dismiss\": \"modal\",\n              onClick: this.onDeleteClick.bind(this),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n  renderUpdateAndDeleteButton() {\n    if (this.props.allowChange) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mr-1\",\n          onClick: this.onEditClick.bind(this),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          \"data-toggle\": \"modal\",\n          \"data-target\": \"#deleteConfirmModal\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    // If there is no post match the given post ID, render NoMatch page\n    if (!this.props.post) {\n      return /*#__PURE__*/_jsxDEV(NoMatch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }, this);\n    } // If the component state 'beingEdit' is true, we render the post edit page\n\n\n    if (this.state.beingEdit) {\n      return /*#__PURE__*/_jsxDEV(PostEdit, {\n        post: this.props.post,\n        onEditSuccess: this.handleEditSuccess.bind(this),\n        history: this.props.history,\n        state: this.props.history.location.state,\n        action: this.props.history.action\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this);\n    } // Render the regular post detail page for reading\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(PostBody, {\n        post: this.props.post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), this.renderUpdateAndDeleteButton(), /*#__PURE__*/_jsxDEV(Comments, {\n        postId: this.props.match.params.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentNew, {\n        postId: this.props.match.params.id,\n        history: this.props.history,\n        state: this.props.history.location.state,\n        action: this.props.history.action\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), this.renderDeleteConfirmModal()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  posts,\n  auth\n}, ownProps) {\n  return {\n    post: posts[ownProps.match.params.id],\n    allowChange: auth.allowChange\n  };\n}\n\nexport default connect(mapStateToProps, {\n  fetchPost,\n  checkAuthority,\n  deletePost\n})(PostDetail);","map":{"version":3,"sources":["/Users/kongyangma/Desktop/react-redux-blog/client/src/components/blog/post_detail/index.js"],"names":["React","Component","connect","NoMatch","PostBody","Comments","CommentNew","PostEdit","fetchPost","checkAuthority","deletePost","PostDetail","constructor","props","state","beingEdit","componentDidMount","setState","id","match","params","post","handleEditSuccess","onEditClick","onDeleteClick","path","history","push","renderDeleteConfirmModal","bind","renderUpdateAndDeleteButton","allowChange","render","location","action","mapStateToProps","posts","auth","ownProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport NoMatch from '../../nomatch';\nimport PostBody from './post_body';\nimport Comments from './comments';\nimport CommentNew from './comment_new';\nimport PostEdit from './post_edit';\n\nimport { fetchPost, checkAuthority, deletePost } from '../../../actions';\n\nclass PostDetail extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {  // component state: being read or being edited\n      beingEdit: false\n    };\n  }\n\n  componentDidMount() {\n\n    // By default, we set beingEdit as false (Since when the user first click the post, the post detail is read, rather than edited)\n    this.setState({\n      beingEdit: false\n    });\n\n    // Get post id\n    const { id } = this.props.match.params;\n\n    // Fetch post detail\n    if (!this.props.post) {\n      this.props.fetchPost(id);\n    }\n\n    // Check whether current authenticated user has authority to make change to this post\n    this.props.checkAuthority(id);\n  }\n\n  handleEditSuccess() {\n    this.setState({\n      beingEdit: false\n    });\n  }\n\n  onEditClick() {\n    this.setState({\n      beingEdit: true\n    });\n  }\n\n  onDeleteClick() {\n    const { id } = this.props.match.params;\n    this.props.deletePost(id, (path) => {\n      this.props.history.push(path);\n    });\n  }\n\n  renderDeleteConfirmModal() {  // used for delete confirmation\n    return (\n      <div className=\"modal fade\" id=\"deleteConfirmModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"deleteConfirmModalLabel\" aria-hidden=\"true\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"deleteConfirmModalLabel\">Confirm Delete</h5>\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <p>Are you sure you want to delete this post with its comments? <strong>Attention!</strong> This delete operation cannot be undone.</p>\n            </div>\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n              <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={this.onDeleteClick.bind(this)}>Delete</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderUpdateAndDeleteButton() {\n    if (this.props.allowChange) {\n      return (\n        <div>\n          <button className=\"btn btn-primary mr-1\" onClick={this.onEditClick.bind(this)}>Edit</button>\n          <button className=\"btn btn-danger\" data-toggle=\"modal\" data-target=\"#deleteConfirmModal\">Delete</button>\n        </div>\n      );\n    }\n  }\n\n  render() {\n\n    // If there is no post match the given post ID, render NoMatch page\n    if (!this.props.post) {\n      return <NoMatch />;\n    }\n\n    // If the component state 'beingEdit' is true, we render the post edit page\n    if (this.state.beingEdit) {\n      return (\n        <PostEdit\n          post={this.props.post}\n          onEditSuccess={this.handleEditSuccess.bind(this)}\n          history={this.props.history}\n          state={this.props.history.location.state}\n          action={this.props.history.action}\n        />\n      );\n    }\n\n    // Render the regular post detail page for reading\n    return (\n      <div  className=\"post\">\n        <PostBody post={this.props.post} />\n        {this.renderUpdateAndDeleteButton()}\n        <Comments postId={this.props.match.params.id} />\n        <CommentNew\n          postId={this.props.match.params.id}\n          history={this.props.history}\n          state={this.props.history.location.state}\n          action={this.props.history.action}\n        />\n\n        {this.renderDeleteConfirmModal()}\n\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ posts, auth }, ownProps) {\n  return {\n    post: posts[ownProps.match.params.id],\n    allowChange: auth.allowChange,\n  };\n}\n\nexport default connect(mapStateToProps, { fetchPost, checkAuthority, deletePost })(PostDetail);"]},"metadata":{},"sourceType":"module"}