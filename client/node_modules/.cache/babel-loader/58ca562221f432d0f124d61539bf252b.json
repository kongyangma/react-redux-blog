{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kongyangma/Workspace/react-redux-blog/client/src/components/blog/post_detail/post_edit.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { updatePost } from '../../../actions';\n\nclass PostEdit extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderInput = field => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        ...field.input,\n        type: field.type,\n        placeholder: field.placeholder,\n        required: field.required ? 'required' : '',\n        disabled: field.disabled ? 'disabled' : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this);\n\n    this.renderTextEditor = field => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        id: \"x\",\n        type: \"hidden\",\n        name: \"content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"trix-editor\", {\n        input: \"x\",\n        ...field.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this);\n  }\n\n  componentDidMount() {\n    const {\n      content\n    } = this.props.post;\n    document.querySelector(\"trix-editor\").value = content;\n  }\n\n  handleFormSubmit({\n    title,\n    categories,\n    content\n  }) {\n    const _id = this.props.post._id;\n    categories = categories.toString();\n    this.props.updatePost({\n      _id,\n      title,\n      categories,\n      content\n    }, this.props.onEditSuccess, (path, state) => {\n      this.props.history.replace(path, state);\n    });\n  }\n\n  renderAlert() {\n    const {\n      state\n    } = this.props;\n    const {\n      action\n    } = this.props;\n\n    if (state && action === 'REPLACE') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: [`[${state.time}] --- `, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Oops!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 36\n        }, this), \" \", state.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [this.renderAlert(), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-5\",\n        children: \"Edit Your Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(this.handleFormSubmit.bind(this)),\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"title\",\n          component: this.renderInput,\n          type: \"text\",\n          label: \"Title:\",\n          placeholder: \"Enter your title\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"categories\",\n          component: this.renderInput,\n          type: \"text\",\n          label: \"Categories:\",\n          placeholder: \"Enter your categories, use ',' to separate them\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"content\",\n          component: this.renderTextEditor,\n          label: \"Content:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          action: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Publish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nPostEdit = reduxForm({\n  form: 'post_edit' // name of the form\n\n})(PostEdit);\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    initialValues: ownProps.post\n  };\n}\n\nexport default connect(mapStateToProps, {\n  updatePost\n})(PostEdit);\n/*\n<Container className=\"mt-5 pt-5\">\n        <Row className=\"justify-content-lg-center\">\n          <Form>\n            <h3>Edit Your Post</h3>\n            <hr />\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Categories</Form.Label>\n              <Form.Control type=\"text\" />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Content</Form.Label>\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Publish\n            </Button>\n          </Form>\n        </Row>\n      </Container>\n*/","map":{"version":3,"sources":["/Users/kongyangma/Workspace/react-redux-blog/client/src/components/blog/post_detail/post_edit.js"],"names":["React","Component","connect","reduxForm","Field","updatePost","PostEdit","renderInput","field","label","input","type","placeholder","required","disabled","renderTextEditor","componentDidMount","content","props","post","document","querySelector","value","handleFormSubmit","title","categories","_id","toString","onEditSuccess","path","state","history","replace","renderAlert","action","time","message","render","handleSubmit","bind","form","mapStateToProps","ownProps","initialValues"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { updatePost } from '../../../actions';\n\nclass PostEdit extends Component {\n\n  componentDidMount() {\n    const { content } = this.props.post;\n    document.querySelector(\"trix-editor\").value = content;\n  }\n\n  handleFormSubmit({ title, categories, content }) {\n\n    const _id = this.props.post._id;\n    categories = categories.toString();\n\n    this.props.updatePost({ _id, title, categories, content }, this.props.onEditSuccess, (path, state) => {\n      this.props.history.replace(path, state);\n    });\n  }\n\n  renderInput = (field) => (\n    <fieldset className=\"form-group\">\n      <label>{field.label}</label>\n      <input\n        className=\"form-control\"\n        {...field.input}\n        type={field.type}\n        placeholder={field.placeholder}\n        required={field.required? 'required' : ''}\n        disabled={field.disabled? 'disabled' : ''}\n      />\n    </fieldset>\n  );\n\n  renderTextEditor = (field) => (\n    <fieldset className=\"form-group\">\n      <label>{field.label}</label>\n      <input className=\"form-control\" id=\"x\" type=\"hidden\" name=\"content\" />\n      <trix-editor input=\"x\" {...field.input} />\n    </fieldset>\n  );\n\n  renderAlert() {\n\n    const { state } = this.props;\n    const { action } = this.props;\n\n    if (state && action === 'REPLACE') {\n      return (\n        <div className=\"alert alert-danger\" role=\"alert\">\n          {`[${state.time}] --- `} <strong>Oops!</strong> {state.message}\n        </div>\n      );\n    }\n  }\n\n  render() {\n\n    const { handleSubmit } = this.props;\n\n    return (\n      <div className=\"post\">\n        {this.renderAlert()}\n        <h2 className=\"mb-5\">Edit Your Post</h2>\n        <form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n          <Field name=\"title\" component={this.renderInput} type=\"text\" label=\"Title:\" placeholder=\"Enter your title\" required={true} />\n          <Field name=\"categories\" component={this.renderInput} type=\"text\" label=\"Categories:\" placeholder=\"Enter your categories, use ',' to separate them\" required={true} />\n          <Field name=\"content\" component={this.renderTextEditor} label=\"Content:\" />\n          <button action=\"submit\" className=\"btn btn-primary\">Publish</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nPostEdit = reduxForm({\n  form: 'post_edit',  // name of the form\n})(PostEdit);\n\nfunction mapStateToProps(state, ownProps) {\n  return { initialValues: ownProps.post };\n}\n\nexport default connect(mapStateToProps, { updatePost })(PostEdit);\n\n\n/*\n<Container className=\"mt-5 pt-5\">\n        <Row className=\"justify-content-lg-center\">\n          <Form>\n            <h3>Edit Your Post</h3>\n            <hr />\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control type=\"text\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Categories</Form.Label>\n              <Form.Control type=\"text\" />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Content</Form.Label>\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Publish\n            </Button>\n          </Form>\n        </Row>\n      </Container>\n*/"]},"metadata":{},"sourceType":"module"}