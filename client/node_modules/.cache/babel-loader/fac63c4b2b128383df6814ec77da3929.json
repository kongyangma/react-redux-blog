{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kongyangma/Desktop/react-redux-blog/client/src/components/auth/require_auth.js\";\n// An higher-order component to make sure user has logged in\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nexport default function (ComposedComponent) {\n  class Authentication extends Component {\n    componentWillMount() {\n      if (!this.props.authenticated) {\n        this.context.router.history.replace('/signin', {\n          time: new Date().toLocaleString(),\n          message: 'Please sign in first.'\n        });\n      }\n    }\n\n    componentWillUpdate(nextProps) {\n      if (!nextProps.authenticated) {\n        this.context.router.history.replace('/signin', {\n          time: new Date().toLocaleString(),\n          message: 'Please sign in first.'\n        });\n      }\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(ComposedComponent, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n    }\n\n  }\n\n  Authentication.contextTypes = {\n    router: PropTypes.object\n  };\n\n  function mapStateToProps(state) {\n    return {\n      authenticated: state.auth.authenticated\n    };\n  }\n\n  return connect(mapStateToProps)(Authentication);\n}","map":{"version":3,"sources":["/Users/kongyangma/Desktop/react-redux-blog/client/src/components/auth/require_auth.js"],"names":["React","Component","PropTypes","connect","ComposedComponent","Authentication","componentWillMount","props","authenticated","context","router","history","replace","time","Date","toLocaleString","message","componentWillUpdate","nextProps","render","contextTypes","object","mapStateToProps","state","auth"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,eAAe,UAASC,iBAAT,EAA4B;AAEzC,QAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAMrCK,IAAAA,kBAAkB,GAAG;AACnB,UAAI,CAAC,KAAKC,KAAL,CAAWC,aAAhB,EAA+B;AAC7B,aAAKC,OAAL,CAAaC,MAAb,CAAoBC,OAApB,CAA4BC,OAA5B,CAAoC,SAApC,EAA+C;AAAEC,UAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,cAAX,EAAR;AAAqCC,UAAAA,OAAO,EAAE;AAA9C,SAA/C;AACD;AACF;;AAEDC,IAAAA,mBAAmB,CAACC,SAAD,EAAY;AAC7B,UAAI,CAACA,SAAS,CAACV,aAAf,EAA8B;AAC5B,aAAKC,OAAL,CAAaC,MAAb,CAAoBC,OAApB,CAA4BC,OAA5B,CAAoC,SAApC,EAA+C;AAAEC,UAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,cAAX,EAAR;AAAqCC,UAAAA,OAAO,EAAE;AAA9C,SAA/C;AACD;AACF;;AAEDG,IAAAA,MAAM,GAAG;AACP,0BAAO,QAAC,iBAAD,OAAuB,KAAKZ;AAA5B;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AApBoC;;AAAjCF,EAAAA,cAFmC,CAIhCe,YAJgC,GAIjB;AACpBV,IAAAA,MAAM,EAAER,SAAS,CAACmB;AADE,GAJiB;;AAyBzC,WAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,WAAO;AAAEf,MAAAA,aAAa,EAAEe,KAAK,CAACC,IAAN,CAAWhB;AAA5B,KAAP;AACD;;AAED,SAAOL,OAAO,CAACmB,eAAD,CAAP,CAAyBjB,cAAzB,CAAP;AACD","sourcesContent":["// An higher-order component to make sure user has logged in\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nexport default function(ComposedComponent) {\n\n  class Authentication extends Component {\n\n    static contextTypes = {\n      router: PropTypes.object\n    };\n\n    componentWillMount() {\n      if (!this.props.authenticated) {\n        this.context.router.history.replace('/signin', { time: new Date().toLocaleString(), message: 'Please sign in first.'});\n      }\n    }\n\n    componentWillUpdate(nextProps) {\n      if (!nextProps.authenticated) {\n        this.context.router.history.replace('/signin', { time: new Date().toLocaleString(), message: 'Please sign in first.'});\n      }\n    }\n\n    render() {\n      return <ComposedComponent {...this.props} />\n    }\n  }\n\n  function mapStateToProps(state) {\n    return { authenticated: state.auth.authenticated };\n  }\n\n  return connect(mapStateToProps)(Authentication);\n}\n"]},"metadata":{},"sourceType":"module"}