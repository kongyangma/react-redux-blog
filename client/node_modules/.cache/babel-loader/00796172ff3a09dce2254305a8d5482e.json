{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kongyangma/Workspace/react-redux-blog/client/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport reduxThunk from 'redux-thunk';\nimport Header from './components/header';\nimport Welcome from './components/welcome';\nimport Footer from './components/footer';\nimport Signup from './components/auth/signup';\nimport Signin from './components/auth/signin';\nimport RequireAuth from './components/auth/require_auth';\nimport Profile from './components/userinfo/profile';\nimport Settings from './components/userinfo/settings';\nimport NoMatch from './components/nomatch';\nimport PostNew from './components/blog/post_new';\nimport PostMine from './components/blog/post_mine';\nimport PostList from './components/blog/post_list';\nimport PostDetail from './components/blog/post_detail/index';\nimport reducers from './reducers';\nimport { AUTH_USER } from './actions/types';\nconst createStoreWithMiddleware = applyMiddleware(reduxThunk)(createStore);\nconst store = createStoreWithMiddleware(reducers);\nconst token = localStorage.getItem('token'); // If we have a token, consider the user to be signed in\n\nif (token) {\n  // We need to update application state\n  store.dispatch({\n    type: AUTH_USER\n  });\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            id: \"content\",\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: \"/\",\n                component: Welcome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/signin\",\n                component: Signin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/signup\",\n                component: Signup\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/profile\",\n                component: RequireAuth(Profile)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/settings\",\n                component: RequireAuth(Settings)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: \"/posts\",\n                component: PostList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/posts/new\",\n                component: RequireAuth(PostNew)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/posts/:id\",\n                component: PostDetail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/my_posts\",\n                component: RequireAuth(PostMine)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                component: NoMatch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kongyangma/Workspace/react-redux-blog/client/src/App.js"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","BrowserRouter","Router","Route","Switch","reduxThunk","Header","Welcome","Footer","Signup","Signin","RequireAuth","Profile","Settings","NoMatch","PostNew","PostMine","PostList","PostDetail","reducers","AUTH_USER","createStoreWithMiddleware","store","token","localStorage","getItem","dispatch","type","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport reduxThunk from 'redux-thunk';\n\nimport Header from './components/header';\nimport Welcome from './components/welcome';\nimport Footer from './components/footer';\nimport Signup from './components/auth/signup';\nimport Signin from './components/auth/signin';\nimport RequireAuth from './components/auth/require_auth';\nimport Profile from './components/userinfo/profile';\nimport Settings from './components/userinfo/settings';\nimport NoMatch from './components/nomatch';\nimport PostNew from './components/blog/post_new';\nimport PostMine from './components/blog/post_mine';\nimport PostList from './components/blog/post_list';\nimport PostDetail from './components/blog/post_detail/index';\n\nimport reducers from './reducers';\nimport { AUTH_USER } from './actions/types';\n\nconst createStoreWithMiddleware = applyMiddleware(reduxThunk)(createStore);\nconst store = createStoreWithMiddleware(reducers);\n\nconst token = localStorage.getItem('token');\n// If we have a token, consider the user to be signed in\nif (token) {\n  // We need to update application state\n  store.dispatch({ type: AUTH_USER });\n}\n\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Header />\n            <div className=\"container\" id=\"content\">\n              <Switch>\n                <Route exact path='/' component={Welcome} />\n                <Route path='/signin' component={Signin} />\n                <Route path='/signup' component={Signup} />\n                <Route path=\"/profile\" component={RequireAuth(Profile)} />\n                <Route path=\"/settings\" component={RequireAuth(Settings)} />\n                <Route exact path='/posts' component={PostList} />\n                <Route path='/posts/new' component={RequireAuth(PostNew)} />\n                <Route path='/posts/:id' component={PostDetail} />\n                <Route path='/my_posts' component={RequireAuth(PostMine)} />\n                <Route component={NoMatch} />\n              </Switch>\n            </div>\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n"]},"metadata":{},"sourceType":"module"}