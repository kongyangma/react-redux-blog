{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kongyangma/Desktop/react-redux-blog/client/src/components/auth/signup.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form'; // read new version of ReduxForm\n\nimport { signupUser } from '../../actions';\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderField = ({\n      label,\n      input,\n      type,\n      meta: {\n        touched,\n        error,\n        warning\n      }\n    }) => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        placeholder: label,\n        ...input,\n        type: type,\n        required: \"required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), touched && error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this);\n  }\n\n  componentWillMount() {\n    if (this.props.authenticated) {\n      // if the user already signed in, navigate to '/posts'\n      this.props.history.replace('/posts');\n    }\n  }\n\n  handleFormSubmit({\n    email,\n    password,\n    firstName,\n    lastName\n  }) {\n    // Call action creator to sign up the user\n    this.props.signupUser({\n      email,\n      password,\n      firstName,\n      lastName\n    }, (path, state) => {\n      // callback 1: history push\n      this.props.history.push(path, state);\n    }, (path, state) => {\n      // callback 2: history replace\n      this.props.history.replace(path, state);\n    });\n  }\n\n  renderAlert() {\n    const {\n      state\n    } = this.props.history.location;\n    const {\n      action\n    } = this.props.history; // message: sign up failed\n\n    if (state && action === 'REPLACE') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: [`[${state.time}] --- `, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Oops!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 36\n        }, this), \" \", state.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.renderAlert(), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-signin\",\n        onSubmit: handleSubmit(this.handleFormSubmit.bind(this)),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"firstName\",\n          component: this.renderField,\n          type: \"text\",\n          label: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"lastName\",\n          component: this.renderField,\n          type: \"text\",\n          label: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          component: this.renderField,\n          type: \"email\",\n          label: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          component: this.renderField,\n          type: \"password\",\n          label: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"passwordConfirm\",\n          component: this.renderField,\n          type: \"password\",\n          label: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction validate(formProps) {\n  // console.log(formProps);\n  const errors = {};\n  /*\n  if (!formProps.email) {\n    errors.email = 'Please enter an email';\n  }\n  if (!formProps.password) {\n    errors.password = 'Please enter an password';\n  }\n  if (!formProps.passwordConfirm) {\n    errors.passwordConfirm = 'Please enter an password confirmation';\n  }\n  */\n\n  if (formProps.password !== formProps.passwordConfirm) {\n    errors.passwordConfirm = 'Password must match!';\n  }\n\n  return errors;\n}\n\nSignup = reduxForm({\n  form: 'signup',\n  validate: validate\n})(Signup);\n\nfunction mapStateToProps(state) {\n  return {\n    authenticated: state.auth.authenticated\n  };\n}\n\nexport default connect(mapStateToProps, {\n  signupUser\n})(Signup);\n/*\n\nclass Signup extends Component {\n  render() {\n    return (\n      <Container className=\"mt-5 pt-5\">\n        <Row className=\"justify-content-md-center\">\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>First Name</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"First Name\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Last Name\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Email\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Confirm Password\" />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Sign Up\n              </Button>\n          </Form>\n        </Row>\n      </Container>\n    );\n  }\n}\n*/","map":{"version":3,"sources":["/Users/kongyangma/Desktop/react-redux-blog/client/src/components/auth/signup.js"],"names":["React","Component","connect","reduxForm","Field","signupUser","Signup","renderField","label","input","type","meta","touched","error","warning","componentWillMount","props","authenticated","history","replace","handleFormSubmit","email","password","firstName","lastName","path","state","push","renderAlert","location","action","time","message","render","handleSubmit","bind","validate","formProps","errors","passwordConfirm","form","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';  // read new version of ReduxForm\nimport { signupUser } from '../../actions';\n\nclass Signup extends Component {\n\n  componentWillMount() {\n    if (this.props.authenticated) {  // if the user already signed in, navigate to '/posts'\n      this.props.history.replace('/posts');\n    }\n  }\n\n  handleFormSubmit({ email, password, firstName, lastName }) {\n    // Call action creator to sign up the user\n    this.props.signupUser({ email, password, firstName, lastName }, (path, state) => {  // callback 1: history push\n      this.props.history.push(path, state);\n    }, (path, state) => {  // callback 2: history replace\n      this.props.history.replace(path, state);\n    });\n  }\n\n  renderField = ({ label, input, type, meta: { touched, error, warning } }) => (\n    <fieldset className=\"form-group\">\n      { /*<label>{label}</label>*/ }\n      <input className=\"form-control\" placeholder={label} {...input} type={type} required='required' />\n      { touched && error && <span className=\"text-danger\">{error}</span> }\n    </fieldset>\n  );\n\n  renderAlert() {\n\n    const { state } = this.props.history.location;\n    const { action } = this.props.history;\n\n    // message: sign up failed\n    if (state && action === 'REPLACE') {\n      return (\n        <div className=\"alert alert-danger\">\n          {`[${state.time}] --- `} <strong>Oops!</strong> {state.message}\n        </div>\n      );\n    }\n  }\n\n  render() {\n\n    const { handleSubmit } = this.props;\n\n    return (\n      <div>\n        {this.renderAlert()}\n        <form className=\"form-signin\" onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n          <h3>Sign Up</h3>\n          <hr />\n          <Field name=\"firstName\" component={this.renderField} type=\"text\" label=\"First Name\"/>\n          <Field name=\"lastName\" component={this.renderField} type=\"text\" label=\"Last Name\"/>\n          <Field name=\"email\" component={this.renderField} type=\"email\" label=\"Email\"/>\n          <Field name=\"password\" component={this.renderField} type=\"password\" label=\"Password\"/>\n          <Field name=\"passwordConfirm\" component={this.renderField} type=\"password\" label=\"Confirm Password\"/>\n          <button type=\"submit\" className=\"btn btn-primary\">Sign Up</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction validate(formProps) {\n\n  // console.log(formProps);\n\n  const errors = {};\n\n  /*\n  if (!formProps.email) {\n    errors.email = 'Please enter an email';\n  }\n  if (!formProps.password) {\n    errors.password = 'Please enter an password';\n  }\n  if (!formProps.passwordConfirm) {\n    errors.passwordConfirm = 'Please enter an password confirmation';\n  }\n  */\n\n  if (formProps.password !== formProps.passwordConfirm) {\n    errors.passwordConfirm = 'Password must match!';\n  }\n\n  return errors;\n}\n\nSignup = reduxForm({\n  form: 'signup',\n  validate: validate\n})(Signup);\n\nfunction mapStateToProps(state) {\n  return { authenticated: state.auth.authenticated };\n}\n\nexport default connect(mapStateToProps, { signupUser })(Signup);\n\n\n\n\n\n/*\n\nclass Signup extends Component {\n  render() {\n    return (\n      <Container className=\"mt-5 pt-5\">\n        <Row className=\"justify-content-md-center\">\n          <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>First Name</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"First Name\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Last Name</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Last Name\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Email\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Confirm Password\" />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Sign Up\n              </Button>\n          </Form>\n        </Row>\n      </Container>\n    );\n  }\n}\n*/"]},"metadata":{},"sourceType":"module"}