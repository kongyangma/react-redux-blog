{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kongyangma/Workspace/react-redux-blog/client/src/components/welcome.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/welcome.css';\nexport default (() => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jumbotron\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-3\",\n      children: \"Welcome!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is a blog system, you can record your ideas here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-primary btn-lg\",\n        to: \"/posts\",\n        role: \"button\",\n        children: \"Look the blog posts \\xBB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row text-justify\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Front-end\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The front-end client is built as a simple-page-application using React and Redux (for middlewares and reducers). Besides, React-Router is used for navigation. Redux-Thunk is used for processing asynchronous requests. Bootstrap 4 is used for page styling.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Database\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"MongoDB is used as the back-end database, which include different data models/schemas (i.e., User, Post and Comment). Mongoose is used to access the MongoDB for CRUD actions (create, read, update and delete).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this));","map":{"version":3,"sources":["/Users/kongyangma/Workspace/react-redux-blog/client/src/components/welcome.js"],"names":["React","Link"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,mBAAP;AAEA,gBAAe,mBACb;AAAA,0BACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,6BAAG,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,wBAAhB;AAAyC,QAAA,EAAE,EAAC,QAA5C;AAAqD,QAAA,IAAI,EAAC,QAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAOE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './css/welcome.css';\n\nexport default () => (\n  <div>\n    <div className=\"jumbotron\">\n      <h1 className=\"display-3\">Welcome!</h1>\n      <p>This is a blog system, you can record your ideas here.</p>\n      <p><Link className=\"btn btn-primary btn-lg\" to=\"/posts\" role=\"button\">Look the blog posts &raquo;</Link></p>\n    </div>\n\n    <div className=\"row text-justify\">\n      <div className=\"col-md-6\">\n        <h2>Front-end</h2>\n        <p>The front-end client is built as a simple-page-application using React and Redux (for middlewares and reducers). Besides, React-Router is used for navigation. Redux-Thunk is used for processing asynchronous requests. Bootstrap 4 is used for page styling.</p>\n      </div>\n      <div className=\"col-md-6\">\n        <h2>Database</h2>\n        <p>MongoDB is used as the back-end database, which include different data models/schemas (i.e., User, Post and Comment). Mongoose is used to access the MongoDB for CRUD actions (create, read, update and delete).</p>\n      </div>\n    </div>\n  </div>\n);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}