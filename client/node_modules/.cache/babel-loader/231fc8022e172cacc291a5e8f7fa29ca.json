{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kongyangma/Desktop/react-redux-blog/client/src/components/userinfo/settings.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { changePassword } from '../../actions/index';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nclass Settings extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderField = ({\n      label,\n      input,\n      type,\n      meta: {\n        touched,\n        error,\n        warning\n      }\n    }) => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        placeholder: label,\n        ...input,\n        type: type,\n        required: \"required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), touched && error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this);\n  }\n\n  handleFormSubmit({\n    oldPassword,\n    newPassword\n  }) {\n    this.props.changePassword({\n      oldPassword,\n      newPassword\n    }, (path, state) => {\n      // callback: history replace\n      this.props.history.replace(path, state);\n    });\n  }\n\n  renderAlert() {\n    const {\n      state\n    } = this.props.history.location;\n    const {\n      action\n    } = this.props.history;\n\n    if (state && action === 'REPLACE') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert ${state.status === 'success' ? 'alert-success' : 'alert-danger'}`,\n        role: \"alert\",\n        children: [`[${state.time}] --- `, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: state.status === 'success' ? 'Congratulations!' : 'Oops!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 36\n        }, this), \" \", state.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  render() {\n    // these properties comes from ReduxForm\n    const {\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5 pt-5\",\n      children: [this.renderAlert(), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-lg-center\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit(this.handleFormSubmit.bind(this)),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            component: this.renderField,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Old Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            component: this.renderField,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            component: this.renderField,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Confirm New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction validate(formProps) {\n  // console.log(formProps);\n  const errors = {};\n\n  if (formProps.newPassword !== formProps.newPasswordConfirm) {\n    errors.newPasswordConfirm = 'New password must match!';\n  }\n\n  return errors;\n}\n\nSettings = reduxForm({\n  form: 'settings',\n  // name of the form\n  validate: validate\n})(Settings);\nexport default connect(null, {\n  changePassword\n})(Settings);","map":{"version":3,"sources":["/Users/kongyangma/Desktop/react-redux-blog/client/src/components/userinfo/settings.js"],"names":["React","Component","connect","reduxForm","Field","changePassword","Container","Row","Form","Button","Settings","renderField","label","input","type","meta","touched","error","warning","handleFormSubmit","oldPassword","newPassword","props","path","state","history","replace","renderAlert","location","action","status","time","message","render","handleSubmit","bind","validate","formProps","errors","newPasswordConfirm","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { changePassword } from '../../actions/index';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\n\nclass Settings extends Component {\n\n  handleFormSubmit({ oldPassword, newPassword }) {\n    this.props.changePassword({ oldPassword, newPassword }, (path, state) => {  // callback: history replace\n      this.props.history.replace(path, state);\n    });\n  }\n\n  renderField = ({ label, input, type, meta: { touched, error, warning } }) => (\n    <fieldset className=\"form-group\">\n      <input className=\"form-control\" placeholder={label} {...input} type={type} required='required' />\n      { touched && error && <span className=\"text-danger\">{error}</span> }\n    </fieldset>\n  );\n\n  renderAlert() {\n\n    const { state } = this.props.history.location;\n    const { action } = this.props.history;\n\n    if (state && action === 'REPLACE') {\n\n      return (\n        <div className={`alert ${state.status === 'success' ? 'alert-success' : 'alert-danger'}`} role=\"alert\">\n          {`[${state.time}] --- `} <strong>{state.status === 'success' ? 'Congratulations!' : 'Oops!'}</strong> {state.message}\n        </div>\n      );\n    }\n  }\n\n  render() {\n\n    // these properties comes from ReduxForm\n    const { handleSubmit } = this.props;\n\n    return (\n      <Container className=\"mt-5 pt-5\">\n        {this.renderAlert()}\n        <Row className=\"justify-content-lg-center\">\n          <Form onSubmit={handleSubmit(this.handleFormSubmit.bind(this))}>\n            <h3>Change Password</h3>\n            <hr />\n            <Form.Group controlId=\"formBasicPassword\" component={this.renderField}>\n              <Form.Label>Old Password</Form.Label>\n              <Form.Control type=\"password\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\" component={this.renderField}>\n              <Form.Label>New Password</Form.Label>\n              <Form.Control type=\"password\" />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\" component={this.renderField}>\n              <Form.Label>Confirm New Password</Form.Label>\n              <Form.Control type=\"password\" />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Change Password\n            </Button>\n          </Form>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nfunction validate(formProps) {\n\n  // console.log(formProps);\n\n  const errors = {};\n\n  if (formProps.newPassword !== formProps.newPasswordConfirm) {\n    errors.newPasswordConfirm = 'New password must match!';\n  }\n\n  return errors;\n}\n\nSettings = reduxForm({\n  form: 'settings',  // name of the form\n  validate: validate,\n})(Settings);\n\nexport default connect(null, { changePassword })(Settings);\n"]},"metadata":{},"sourceType":"module"}